# MPV配置模块 - 处理MPV配置相关功能
from aqt import mw
from aqt.utils import tooltip
import os
import shutil

def create_mpv_config():
    from . import mpv_scripts
    
    config_dir = os.path.expanduser("~/.config/mpv")
    try:
        os.makedirs(config_dir, exist_ok=True)
    except Exception as e:
        tooltip(f"创建 MPV 配置目录失败: {str(e)}")
        return False
    
    config_path = os.path.join(config_dir, "input.conf")
    if os.path.exists(config_path):
        backup_path = config_path + ".anki_backup"
        if not os.path.exists(backup_path):
            try:
                with open(config_path, "r", encoding="utf-8") as f:
                    original_content = f.read()
                with open(backup_path, "w", encoding="utf-8") as f:
                    f.write(original_content)
            except Exception as e:
                tooltip(f"备份 MPV 配置文件失败: {str(e)}")
                return False
    
    config = mw.addonManager.getConfig(__name__.split('.')[0]) or {}
    custom_shortcuts = config.get("custom_shortcuts", {})
    
    # 获取AB循环设置
    x_duration = config.get("x_duration", 3.0)
    x_offset = config.get("x_offset", 1.5)
    z_duration = config.get("z_duration", 2.5)
    z_offset = config.get("z_offset", 2.7)
    
    config_content = "# Generated by Anki MPV Shortcuts Plugin\n\n"
    config_content += "# Mouse wheel controls for video progress\n"
    config_content += "WHEEL_UP seek 1\nWHEEL_DOWN seek -1\n\n"
    config_content += "# Default keyboard shortcuts\n"
    config_content += "LEFT no-osd seek -2 exact\nRIGHT no-osd seek 2 exact\n"
    config_content += "UP multiply speed 1.1\nDOWN multiply speed 0.85\n"
    config_content += "a no-osd seek -2 exact\nd no-osd seek 2 exact\n"
    config_content += "w multiply speed 1.1\ns multiply speed 0.85\n"
    config_content += "e set speed 1.0\nc ab-loop\n"
    config_content += "f cycle-values loop \"inf\" \"no\"\n"
    config_content += "x script-message-to quick_ab_loop set_custom_ab_loop 2.5 0.5\n"
    config_content += "z script-message-to quick_ab_loop set_custom_ab_loop 3.5 3.7\n\n"
    
    # 添加r和v按键的配置
    config_content += "# 倍速循环播放控制\n"
    config_content += "r script-message-to speed_cycle start_cycling\n"
    config_content += "v script-message-to speed_cycle start_cycling\n\n"
    
    for key, action in custom_shortcuts.items():
        config_content += f"{key} {action}\n"
    
    try:
        with open(config_path, "w", encoding="utf-8") as f:
            f.write(config_content)
    except Exception as e:
        tooltip(f"创建 MPV 配置文件失败: {str(e)}")
        return False
    
    mpv_conf_path = os.path.join(config_dir, "mpv.conf")
    window_x = config.get("window_x", 50)
    window_y = config.get("window_y", 50)
    enable_speed_cycle = config.get("enable_speed_cycle", True)
    # 添加一个新的配置选项，控制是否显示MPV的OSD信息
    disable_osd = config.get("disable_osd", False)
    
    mpv_conf_content = f"""
# MPV 配置文件 - 由 Anki MPV 快捷键插件生成
save-position-on-quit=yes
watch-later-directory=~/.config/mpv/watch_later
script-opts=ytdl_hook-ytdl_path=yt-dlp
geometry={window_x}%:{window_y}%
"""

    # 如果禁用OSD，添加更全面的OSD禁用配置
    if disable_osd:
        mpv_conf_content += """
# 完全禁用MPV的OSD消息，适用于在IINA等外部播放器中使用
osd-level=0
osd-duration=0
osd-on-seek=no
osd-bar=no
# 将OSD字体设置为极小，几乎不可见
osd-font-size=1
osd-scale=0.01
osd-color='#00000000'
osd-border-color='#00000000'
osd-shadow-color='#00000000'
osd-back-color='#00000000'
osd-msg1=""
osd-msg2=""
osd-msg3=""
osd-status-msg=""

# 禁用脚本中的OSD显示
script-opts=quick_ab_loop-show_osd=no,speed_cycle-show_osd=no
"""
    
    scripts_dir = os.path.join(config_dir, "scripts")
    try:
        os.makedirs(scripts_dir, exist_ok=True)
    except Exception as e:
        tooltip(f"创建 MPV 脚本目录失败: {str(e)}")
        return False
    
    speed_cycle_script = os.path.join(os.path.dirname(__file__), "speed_cycle.lua")
    speed_cycle_dest = os.path.join(scripts_dir, "speed_cycle.lua")
    quick_ab_loop_script = os.path.join(os.path.dirname(__file__), "quick_ab_loop.lua")
    quick_ab_loop_dest = os.path.join(scripts_dir, "quick_ab_loop.lua")
    
    if not os.path.exists(speed_cycle_script):
        if not mpv_scripts.create_speed_cycle_script(speed_cycle_script):
            return False
    
    if not os.path.exists(quick_ab_loop_script):
        if not mpv_scripts.create_quick_ab_loop_script(quick_ab_loop_script):
            return False
    
    if enable_speed_cycle:
        try:
            shutil.copy2(speed_cycle_script, speed_cycle_dest)
        except Exception as e:
            tooltip(f"复制倍速循环脚本失败: {str(e)}")
            return False
    else:
        if os.path.exists(speed_cycle_dest):
            try:
                os.rename(speed_cycle_dest, speed_cycle_dest + ".disabled")
            except Exception as e:
                tooltip(f"禁用倍速循环脚本失败: {str(e)}")
                return False
    
    try:
        shutil.copy2(quick_ab_loop_script, quick_ab_loop_dest)
    except Exception as e:
        tooltip(f"复制快速AB循环脚本失败: {str(e)}")
        return False
    
    try:
        with open(mpv_conf_path, "w", encoding="utf-8") as f:
            f.write(mpv_conf_content)
    except Exception as e:
        tooltip(f"创建 MPV 主配置文件失败: {str(e)}")
        return False
    
    return True

def update_mpv_conf_geometry(x_percent, y_percent):
    config_dir = os.path.expanduser("~/.config/mpv")
    mpv_conf_path = os.path.join(config_dir, "mpv.conf")
    
    try:
        with open(mpv_conf_path, "r", encoding="utf-8") as f:
            lines = f.readlines()
    except Exception as e:
        tooltip(f"读取MPV配置文件失败: {str(e)}")
        return False
    
    geometry_line = f"geometry={x_percent}%:{y_percent}%\n"
    geometry_found = False
    
    for i, line in enumerate(lines):
        if line.strip().startswith("geometry="):
            lines[i] = geometry_line
            geometry_found = True
            break
    
    if not geometry_found:
        lines.append(geometry_line)
    
    try:
        with open(mpv_conf_path, "w", encoding="utf-8") as f:
            f.writelines(lines)
        return True
    except Exception as e:
        tooltip(f"更新MPV配置文件失败: {str(e)}")
        return False

def check_speed_cycle_script():
    from . import mpv_scripts
    
    config_dir = os.path.expanduser("~/.config/mpv")
    scripts_dir = os.path.join(config_dir, "scripts")
    speed_cycle_dest = os.path.join(scripts_dir, "speed_cycle.lua")
    
    if not os.path.exists(scripts_dir) or not os.path.exists(speed_cycle_dest):
        try:
            os.makedirs(scripts_dir, exist_ok=True)
            speed_cycle_script = os.path.join(os.path.dirname(__file__), "speed_cycle.lua")
            
            if not os.path.exists(speed_cycle_script):
                mpv_scripts.create_speed_cycle_script(speed_cycle_script)
            
            shutil.copy2(speed_cycle_script, speed_cycle_dest)
            return True
        except Exception as e:
            tooltip(f"复制倍速循环脚本失败: {str(e)}")
            return False
    return True